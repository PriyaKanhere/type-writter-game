{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","calculateWordCount","ref","onChange","e","value","target","disabled","onClick","current","focus","ReactDOM","render","document","getElementById"],"mappings":"oLA6EeA,MAhEf,WACI,IADW,EAGaC,mBAAS,IAHtB,mBAGJC,EAHI,KAGEC,EAHF,OAI+BF,mBAHpB,GADX,mBAIJG,EAJI,KAIWC,EAJX,OAK+BJ,oBAAS,GALxC,mBAKJK,EALI,KAKWC,EALX,OAMuBN,mBAAS,GANhC,mBAMJO,EANI,KAMOC,EANP,KAOLC,EAAaC,iBAAO,MAqC1B,OAVAC,qBAAU,WACFN,GAAiBF,EAAgB,EACjCS,YAAW,WACPR,GAAiB,SAAAS,GAAI,OAAIA,EAAO,OACjC,KACsB,IAAlBV,IAXXG,GAAiB,GACjBE,EAfJ,SAA4BP,GAExB,OADiBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,OAa/BC,CAAmBlB,OAajC,CAACE,EAAeE,IAGf,gCACI,uDACA,0BAAUe,IAAKX,EACXY,SAvCZ,SAAsBC,GAAI,IACdC,EAAUD,EAAEE,OAAZD,MACRrB,EAAQqB,IAsCAA,MAAOtB,EACPwB,UAAWpB,IAEf,kDAAqBF,KACrB,wBACIuB,QAnCZ,WACIpB,GAAiB,GACjBF,EApBkB,GAqBlBF,EAAQ,IACRO,EAAWkB,QAAQF,UAAW,EAC9BhB,EAAWkB,QAAQC,SA+BXH,SAAUpB,EAFd,mBAMA,8CAAiBE,SCpE7BsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.600e8879.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\r\nimport \"./style.css\"\r\n\r\n/**\r\n * Challenge:\r\n * \r\n * When the timer reaches 0, count the number of words the user typed in \r\n * and display it in the \"Word count\" section\r\n * \r\n * After the game ends, make it so the user can click the Start button again\r\n * to play a second time\r\n */\r\n\r\nfunction App() {\r\n    const STARTING_TIME = 5\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME)\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n    const [wordCount, setWordCount] = useState(0)\r\n    const textBoxRef = useRef(null)\r\n\r\n    function handleChange(e) {\r\n        const { value } = e.target\r\n        setText(value)\r\n    }\r\n\r\n    function calculateWordCount(text) {\r\n        const wordsArr = text.trim().split(\" \")\r\n        return wordsArr.filter(word => word !== \"\").length\r\n    }\r\n\r\n    function startGame() {\r\n        setIsTimeRunning(true)\r\n        setTimeRemaining(STARTING_TIME)\r\n        setText(\"\")\r\n        textBoxRef.current.disabled = false\r\n        textBoxRef.current.focus()\r\n    }\r\n\r\n    function endGame() {\r\n        setIsTimeRunning(false)\r\n        setWordCount(calculateWordCount(text))\r\n    }\r\n\r\n    // https://www.google.com/search?q=Disable+button+in+react\r\n\r\n    useEffect(() => {\r\n        if (isTimeRunning && timeRemaining > 0) {\r\n            setTimeout(() => {\r\n                setTimeRemaining(time => time - 1)\r\n            }, 1000)\r\n        } else if (timeRemaining === 0) {\r\n            endGame()\r\n        }\r\n    }, [timeRemaining, isTimeRunning])\r\n\r\n    return (\r\n        <div>\r\n            <h1>How fast do you type?</h1>\r\n            <textarea ref={textBoxRef}\r\n                onChange={handleChange}\r\n                value={text}\r\n                disabled={!isTimeRunning}\r\n            />\r\n            <h4>Time remaining: {timeRemaining}</h4>\r\n            <button\r\n                onClick={startGame}\r\n                disabled={isTimeRunning}\r\n            >\r\n                Start\r\n            </button>\r\n            <h1>Word count: {wordCount}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App.js\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n"],"sourceRoot":""}